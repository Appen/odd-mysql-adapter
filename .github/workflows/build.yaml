name: build
on:
  push:
    branches:
      - "main"

jobs:
  images:
    runs-on: ubuntu-latest
    env:
      REGISTRY: 436866023604.dkr.ecr.eu-central-1.amazonaws.com
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1.3.3
      - name: Build, tag and push Docker image to Amazon ECR
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ github.event.repository.name }}:ci-${GITHUB_SHA::6} .
          docker push ${{ env.REGISTRY }}/${{ github.event.repository.name }}:ci-${GITHUB_SHA::6}
  update_tag:
    needs: ["images"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: provectus/environment-state
          token: ${{ secrets.ODD_ENV_STATE_GIT_TOKEN }}
      - run: |
          sed -i "s/tag:.*/tag: ci-${GITHUB_SHA::6}/" mysql-adapter.yaml
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "update tag"
          git push
  argocd_sync:
    needs: ["update_tag"]
    runs-on: ubuntu-latest
    steps:
      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o ./argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x ./argocd
      - name: Login into ArgoCD
        run: ./argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_LOGIN }} --password '${{ secrets.ARGOCD_PASSWORD }}' --grpc-web
      - name: Sync ODD Platform application
        run: ./argocd app sync odd-mysql-adapter
